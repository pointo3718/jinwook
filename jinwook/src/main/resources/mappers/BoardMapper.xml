<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jinwook.home.mapper.BoardMapper">

	<sql id="boardColumns">
	board_no
	,user_id
	,board_title
	,board_content
	,board_hits
	,board_code
	,write_date
	,board_img1
	,board_img2
	,board_img3
	,board_inq_status	
	</sql>
	
<resultMap type="board" id="boardSelectMap">
   <result property="boardNo"            column="store_no"         jdbcType="INTEGER"/>   
   <result property="user.userId"        column="user_id"          jdbcType="VARCHAR"/>   
   <result property="boardTitle"         column="board_title"      jdbcType="VARCHAR"/>   
   <result property="boardContent"       column="board_content"    jdbcType="VARCHAR"/>   
   <result property="boardHits"          column="board_hits"       jdbcType="INTEGER"/>   
   <result property="boardCode"          column="board_code"       jdbcType="CHAR"/>   
   <result property="writeDate"          column="write_date"       jdbcType="DATETIME"/>   
   <result property="boardImg1"          column="board_img1"       jdbcType="VARCHAR"/>   
   <result property="boardImg2"          column="board_img2"       jdbcType="VARCHAR"/>   
   <result property="boardImg3"          column="board_img3"       jdbcType="VARCHAR"/>   
   <result property="boardInqStatus"     column="board_inq_status" jdbcType="TINYINT"/>   
</resultMap>

<resultMap type="comment" id="commentSelectMap">
   <result property="commentNo"          column="commen_no"         jdbcType="INTEGER"/>   
   <result property="board.boardNo"      column="board_no"          jdbcType="INTEGER"/>   
   <result property="recipe.rcpNo"       column="rcp_no"      		jdbcType="INTEGER"/>   
   <result property="commentContent"     column="comment_content"   jdbcType="VARCHAR"/>   
   <result property="commentWriter"      column="comment_writer"    jdbcType="VARCHAR"/>   
   <result property="commentDate"        column="comment_date"      jdbcType="DATETIME"/>   
   <result property="recommendCount"     column="recommend_count"   jdbcType="INTEGER"/>   
</resultMap>
   
<resultMap type="orders" id="ordersSelectMap">
	<result property="orderNo"			column="order_no"			jdbcType="INTEGER"/>
	<result property="reviewTitle"		column="review_title"		jdbcType="VARCHAR"/>
	<result property="reviewContent"	column="review_content"		jdbcType="VARCHAR"/>
	<result property="reviewDate"		column="review_date"		jdbcType="DATETIME"/>
	<result property="reviewStar"		column="review_star"		jdbcType="INTEGER"/>
	<result property="reviewImg1"		column="review_img1"		jdbcType="VARCHAR"/>
	<result property="reviewImg2"		column="review_img2"		jdbcType="VARCHAR"/>
	<result property="reviewImg3"		column="review_img3"		jdbcType="VARCHAR"/>
</resultMap>   
	
	<!-- Board insert -->
	<insert id="addBoard" parameterType="Board" useGeneratedKeys="true" keyProperty="boardNo">
		INSERT INTO board (
			<include refid="boardColumns" />
		) VALUES (
			  #{boardNo:INTEGER}
			, #{user.userId:VARCHAR}
			, #{boardTitle:VARCHAR}
			, #{boardContent:VARCHAR}
			, #{boardHits:INTEGER}
			, #{boardCode:CHAR}
			, SYSDATE()
			, #{boardImg1:VARCHAR}
			, #{boardImg2:VARCHAR}
			, #{boardImg3:VARCHAR}
			, #{boardInqStatus}
		)
	</insert>

	<!-- Board update -->
	<update id="updateBoard" parameterType="Board">
		UPDATE board
		SET
			  board_title = #{boardTitle:VARCHAR}
			, board_content = #{boardContent:VARCHAR}
			, board_code = #{boardCode}
			, board_inq_status = #{boardInqStatus}
		WHERE
			board_no = #{boardNo}
	</update>
	
	<!-- Board getBoard -->
	<select id="getBoard" parameterType="int" resultType="Board" resultMap="boardSelectMap">
		SELECT
			b.board_title, b.board_content, b.user_id, b.write_date, b.board_inq_status, c.comment_content
		FROM
			board b, comment c
		WHERE b.board_no = c.board_no
		AND board_inq_status==0
		AND 
			board_no = #{boardNo}
	</select>

	<!-- ?Board selectList? -->
	<select id="getBoardList" parameterType="Board" resultType="Board">
		SELECT
			<include refid="boardColumns" />
		FROM
			board
		WHERE
			board_no = #{boardNo:INTEGER}
		ORDER BY
			board_no DESC,
			write_date DESC
		LIMIT
         #{startPage}, #{recordsPerPage}
	</select>

	<!--  Board delete -->
	<delete id="deleteBoard" parameterType="int">
		DELETE 
		FROM board
		WHERE
			board_no = #{boardNo}
	</delete>
	
	<!-- 게시판 목록 개수 -->
	<select id="getBoardTotalCount" parameterType="Board" resultType="int">
		SELECT
			COUNT(*)
		FROM
			board
		ORDER BY board_no	
	</select>
	
	<!-- Recipe -->
	<sql id="recipeColumns">
	rcp_no
	,user_id
	,rcp_title
	,rcp_content
	,rcp_date
	,rcp_ingredient
	,rcp_thumb
	,rcp_info
	,rcp_hits
	,comment_count	
	</sql>
	
	<!-- Recipe insert -->
	<insert id="addRecipe" parameterType="Recipe" useGeneratedKeys="true" keyProperty="rcpNo">
		INSERT INTO recipe (
			<include refid="recipeColumns" />
		) VALUES (
			  #{rcpNo:INTEGER}
			, #{user.userId:VARCHAR}
			, #{rcpTitle:VARCHAR}
			, #{rcpContent:VARCHAR}
			, SYSDATE()
			, #{rcpIngredient:VARCHAR}
			, #{rcpThumb:VARCHAR}
			, #{rcpInfo:VARCHAR}
			, #{rcpHits:INTEGER}
			, #{commentCount:INTEGER}
		)
	</insert>
	
	<!-- Recipe getRecipe -->
	<select id="getRecipe" parameterType="int" resultType="Recipe">
		SELECT
			<include refid="recipeColumns" />
		FROM
			recipe
		WHERE
			rcp_no = #{rcpNo}
	</select>

	<!-- ?Recipe selectList? -->
	<select id="getRecipeList" parameterType="Board" resultType="Recipe">
		SELECT
			<include refid="recipeColumns" />
		FROM
			recipe
		WHERE
			rcp_no = #{rcpNo}
		LIMIT
         #{startPage}, #{recordsPerPage}
	</select>

	<!-- Recipe update -->
	<update id="updateRecipe" parameterType="Recipe">
		UPDATE recipe
		SET
			rcp_title = #{rcpTitle:VARCHAR}
			, rcp_content = #{rcpContent:VARCHAR}
			, rcp_ingredient = #{rcpIngredient:VARCHAR}
			, rcp_thumb = #{rcpThumb:VARCHAR}
			, rcp_info = #{rcpInfo:VARCHAR}
		WHERE
			rcp_no = #{rcpNo}
	</update>

	<!-- 레시피 목록 개수 -->
	<select id="getRecipeTotalCount" parameterType="Board" resultType="int">
		SELECT
			COUNT(*)
		FROM
			recipe
		ORDER BY rcp_no	
	</select>

	<!--  Recipe delete -->
	<delete id="deleteRecipe" parameterType="int">
		DELETE 
		FROM recipe
		WHERE
			rcp_no = #{rcpNo}
	</delete>
	
	<!-- Review insert -->
	<update id="addReview" parameterType="Orders">
	UPDATE orders
	SET
		review_title = #{reviewTitle:VARCHAR}
	, review_content = #{reviewContent:VARCHAR}
	, review_date = SYSDATE()
	, review_star = #{reviewStar:INTEGER}
	, review_img1 = #{reviewImg1:VARCHAR}
	, review_img2 = #{reviewImg2:VARCHAR}
	, review_img3 = #{reviewImg3:VARCHAR}
	WHERE order_no = #{orderNo}
	</update>
	
	<!--  Review delete -->
	<delete id="deleteReview" parameterType="int">
		DELETE 
		FROM orders
		WHERE
			order_no = #{orderNo}
	</delete>
	
		<!-- 상점후기 목록 개수 -->
	<select id="getReviewTotalCount" parameterType="Orders" resultType="int">
		SELECT
			COUNT(*)
		FROM
			orders
		ORDER BY order_no	
	</select>
	
		<!--   -->
	<select id="getReviewList" parameterType="Orders" resultType="com.jinwook.home.service.domain.Orders">
		SELECT
			*
		FROM
			orders
		WHERE
			order_no = #{orderNo}
		LIMIT
         #{startPage}, #{recordsPerPage}
	</select>
	
	 <sql id="commentColumns">
	comment_no
	,board_no
	,rcp_no
	,comment_content
	,comment_writer
	,comment_date
	</sql> 
	
	 <insert id="addComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="commentNo">
		INSERT INTO comment (
			<include refid="commentColumns" />
		) VALUES (
			  #{commentNo:INTEGER}
			, #{boardNo:INTEGER}
			, #{rcpNo:INTEGER}
			, #{commentContent:VARCHAR}
			, #{commentWriter:VARCHAR}
			, SYSDATE()
		)
	</insert> 
	
	<!-- Comment update -->
	<update id="updateComment" parameterType="Comment">
		UPDATE comment
		SET
			comment_content = #{commentContent:VARCHAR}
			,comment_writer = #{commentWriter:VARCHAR}
		WHERE
			comment_no = #{commentNo}
	</update>
	
	<!--  Comment delete -->
	<delete id="deleteComment" parameterType="Integer">
		DELETE 
		FROM comment
		WHERE
			comment_no = #{commentNo}
	</delete>
	
	<select id="getCommentTotalCount" parameterType="Comment" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			comment
		WHERE
			board_no = #{boardNo}
	</select>

	<select id="getCommentList" parameterType="Comment" resultType="Comment">
		SELECT
			<include refid="commentColumns" />
		FROM
			comment
		WHERE
			board_no = #{boardNo}
		ORDER BY
			board_no DESC,
			comment_date DESC
	</select>

	<insert id="addStoreJjim" parameterType="Jjim" useGeneratedKeys="true" keyProperty="jjimNo">
		INSERT INTO jjim (store_no, user_id)
		VALUES(#{storeNo}, #{user.userId})
	</insert>

	<insert id="addRecipeJjim" parameterType="Jjim" useGeneratedKeys="true" keyProperty="jjimNo">
		INSERT INTO jjim (rcp_no, user_id)
		VALUES(#{rcpNo}, #{user.userId})
	</insert>
	
	<delete id="deleteStoreJjim" parameterType="Jjim">
		DELETE FROM jjim
		WHERE store_no = #{storeNo} AND user_id = #{user.userId}
	</delete>

	<delete id="deleteRecipeJjim" parameterType="Jjim">
		DELETE FROM jjim
		WHERE rcp_no = #{rcpNo} AND user_id = #{user.userId}
	</delete>
	
	<select id="updateRecipeJjim">
		UPDATE recipe
		SET
		rcp_jjimcnt = (SELECT COUNT(*)
		FROM jjim
		WHERE rcp_no = #{rcpNo})
		WHERE rcp_no = #{rcpNo}
	</select>
	
	<!-- <select id="updateStoreJjim">
		UPDATE store
		SET
		board_likecnt = (SELECT COUNT(*)
		FROM tbl_board_like
		WHERE board_id = #{boardId})
		WHERE board_id = #{boardId}
	</select> -->

	<select id="getRecipeJjim" resultType="Jjim">
		SELECT COUNT(jjim_no) FROM jjim WHERE rcp_no = #{rcpNo}
		AND user_id = #{user.userId}
	</select>
	
	<select id="getStoreJjim" resultType="Jjim">
		SELECT COUNT(jjim_no) FROM jjim WHERE store_no = #{storeNo}
		AND user_id = #{user.userId}
	</select>

	<!--  레시피 추천수 -->
	<update id="updateRecipeReco" parameterType="int">
		UPDATE recipe
		SET
		recommend_count = recommendCount+1
		WHERE rcp_no = #{rcpNo}
	</update>
	
	<!--  댓글 추천수 -->
	<update id="updateCommentReco" parameterType="int">
		UPDATE comment
		SET
		recommend_count = recommendCount+1
		WHERE comment_no = #{commentNo}
	</update>
	
	<!-- 레시피 추천수 취소 -->
	<update id="updateRecipeRecoCancel" parameterType="int">
		UPDATE recipe
		SET
		recommend_count = recommendCount-1
		WHERE rcp_no = #{rcpNo}
	</update>
	
	<!-- 댓글 추천수 취소 -->
	<update id="updateCommentRecoCancel" parameterType="int">
		UPDATE comment
		SET
		recommend_count = recommendCount-1
		WHERE comment_no = #{commentNo}
	</update>
	
	<!-- 레시피 추천 시 recommend 테이블에 add -->
	<insert id="addRecipeReco">
		INSERT INTO recommend(recommend_no, rcp_no, user_id)
		VALUES ((SELECT NVL(MAX(recommendNo), 0) + 1 FROM recommend), #{rcpNo}, #{userId}
	</insert>

	<!-- 댓글 추천 시 recommend 테이블에 add -->
	<insert id="addCommentReco">
		INSERT INTO comment(recommend_no, comment_no, user_id)
		VALUES ((SELECT NVL(MAX(recommendNo), 0) + 1 FROM recommend), #{recommendNo}, #{userId}
	</insert>
	
	<!-- 레시피 추천취소 시 delete -->
	<delete id="deleteRecipeReco">
		DELETE FROM recommend
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</delete>
	
	<!-- 댓글 추천취소 시 delete -->
	<delete id="deleteCommentReco">
		DELETE FROM recommend
		WHERE comment_no = #{commentNo}
		AND user_id = #{userId}
	</delete>
	
	<!-- 레시피 추천 시 recocheck를 1로 만들어서 중복방지 -->
	<update id="updateRecipeRecoCheck">
		UPDATE recommend
		SET
		recocheck = 1
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 댓글 추천 시 recocheck를 1로 만들어서 중복방지 -->
	<update id="updateCommentRecoCheck">
		UPDATE recommend
		SET
		recocheck = 1
		WHERE comment_no = #{commentNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 레시피 추천취소 시 다시 0 -->
	<update id="updateRecipeRecoCheckCancel">
		UPDATE recommend
		SET
		recocheck = 0
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 댓글 추천취소 시 다시 0 -->
	<update id="updateCommentRecoCheckCancel">
		UPDATE recommend
		SET
		recocheck = 0
		WHERE comment_no = #{commentNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 레시피 추천 중복방지 select문 -->
	<select id="recipeRecoCheck" resultType="int">
		SELECT COUNT(*)
		FROM recommend
		WHERE rcp_no = #{rcp_no}
		AND user_id = #{userId}
	</select>
	
	<!-- 댓글 추천 중복방지 select문 -->
	<select id="commentRecoCheck" resultType="int">
		SELECT COUNT(*)
		FROM recommend
		WHERE comment_no = #{comment_no}
		AND user_id = #{userId}
	</select>

</mapper>