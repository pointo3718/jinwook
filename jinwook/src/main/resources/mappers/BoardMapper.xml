<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jinwook.home.mapper.BoardMapper">

	<sql id="boardColumns">
	board_no
	,user_id
	,board_title
	,board_content
	,board_hits
	,board_code
	,write_date
	,board_img1
	,board_img2
	,board_img3
	,board_inq_status	
	</sql>
	
<resultMap type="board" id="boardSelectMap">
   <result property="boardNo"            column="board_no"         jdbcType="INTEGER"/>   
   <result property="user.userId"        column="user_id"          jdbcType="VARCHAR"/>   
   <result property="user.role"          column="role"             jdbcType="VARCHAR"/>   
   <result property="boardTitle"         column="board_title"      jdbcType="VARCHAR"/>   
   <result property="boardContent"       column="board_content"    jdbcType="VARCHAR"/>   
   <result property="boardHits"          column="board_hits"       jdbcType="INTEGER"/>   
   <result property="boardCode"          column="board_code"       jdbcType="CHAR"/>   
   <result property="writeDate"          column="write_date"       jdbcType="DATE"/>   
   <result property="boardImg1"          column="board_img1"       jdbcType="VARCHAR"/>   
   <result property="boardImg2"          column="board_img2"       jdbcType="VARCHAR"/>   
   <result property="boardImg3"          column="board_img3"       jdbcType="VARCHAR"/>   
   <result property="boardInqStatus"     column="board_inq_status" jdbcType="TINYINT"/>   
   <result property="comment.commentNo"     	 column="comment_no"       jdbcType="INTEGER"/>   
   <result property="comment.commentContent"     column="comment_content"  jdbcType="VARCHAR"/>   
   <result property="comment.commentWriter"      column="comment_writer"   jdbcType="VARCHAR"/>   
   <result property="comment.commentDate"        column="comment_date"     jdbcType="DATE"/>   
</resultMap>

<resultMap type="comment" id="commentSelectMap">
   <result property="commentNo"          column="comment_no"        jdbcType="INTEGER"/>   
   <result property="board.boardNo"      column="board_no"          jdbcType="INTEGER"/>   
   <result property="recipe.rcpNo"       column="rcp_no"      		jdbcType="INTEGER"/>   
   <result property="commentContent"     column="comment_content"   jdbcType="VARCHAR"/>   
   <result property="commentWriter"      column="comment_writer"    jdbcType="VARCHAR"/>   
   <result property="commentDate"        column="comment_date"      jdbcType="DATE"/>   
   <result property="recommendCount"     column="recommend_count"   jdbcType="INTEGER"/>   
</resultMap>
   
<resultMap type="orders" id="ordersSelectMap">
	<result property="orderNo"			column="order_no"			jdbcType="INTEGER"/>
	<result property="user.userId"		column="user_id"			jdbcType="VARCHAR"/>
	<result property="store.storeName"	column="store_name"			jdbcType="VARCHAR"/>
	<result property="reviewTitle"		column="review_title"		jdbcType="VARCHAR"/>
	<result property="reviewContent"	column="review_content"		jdbcType="VARCHAR"/>
	<result property="reviewDate"		column="review_date"		jdbcType="DATE"/>
	<result property="reviewStar"		column="review_star"		jdbcType="INTEGER"/>
	<result property="reviewImg1"		column="review_img1"		jdbcType="VARCHAR"/>
	<result property="reviewImg2"		column="review_img2"		jdbcType="VARCHAR"/>
	<result property="reviewImg3"		column="review_img3"		jdbcType="VARCHAR"/>
</resultMap>   

<resultMap type="recipe" id="recipeSelectMap">
   <result property="rcpNo"            column="rcp_no"          jdbcType="INTEGER"/>   
   <result property="user.userId"      column="user_id"         jdbcType="VARCHAR"/>   
   <result property="rcpTitle"         column="rcp_title"       jdbcType="VARCHAR"/>   
   <result property="rcpContent"       column="rcp_content"     jdbcType="VARCHAR"/>   
   <result property="rcpDate"          column="rcp_date"        jdbcType="DATE"/>   
   <result property="rcpIngredient"    column="rcp_ingredient"  jdbcType="VARCHAR"/>   
   <result property="rcpThumb"         column="rcp_thumb"       jdbcType="VARCHAR"/>   
   <result property="rcpInfo"          column="rcp_info"        jdbcType="VARCHAR"/>   
   <result property="rcpHits"          column="rcp_hits"        jdbcType="INTEGER"/>   
   <result property="commentCount"     column="comment_count"   jdbcType="INTEGER"/>   
   <result property="rcpJjimCnt"       column="rcp_jjimcnt"     jdbcType="INTEGER"/>   
   <result property="recommendCount"   column="recommend_count" jdbcType="INTEGER"/>   
</resultMap>

<resultMap type="jjim" id="jjimSelectMap">
   <result property="jjimNo"            column="jjim_no"        jdbcType="INTEGER"/>   
   <result property="user.userId"       column="user_id"        jdbcType="VARCHAR"/>   
   <result property="rcpNo"         	column="rcp_no"         jdbcType="VARCHAR"/>   
   <result property="storeNo"         	column="store_no"       jdbcType="VARCHAR"/>   
</resultMap>

<resultMap type="recommend" id="recoSelectMap">
   <result property="recommendNo"       column="recommend_no"    jdbcType="INTEGER"/>   
   <result property="commentNo"         column="comment_no"      jdbcType="INTEGER"/>   
   <result property="rcpNo"         	column="rcp_no"          jdbcType="INTEGER"/>   
   <result property="user.userId"       column="user_id"         jdbcType="VARCHAR"/>   
   <result property="recocheck"         column="recocheck"       jdbcType="INTEGER"/>   
   <result property="recoDate"          column="recodate"        jdbcType="DATE"/>   
   <result property="recommendCount"    column="recommend_count" jdbcType="INTEGER"/>   
</resultMap>

<resultMap type="attach" id="attachSelectMap">
   <result property="attachNo"       column="attach_no"         jdbcType="INTEGER"/>   
   <result property="boardNo"        column="board_no"          jdbcType="INTEGER"/>   
   <result property="rcpNo"        	 column="rcp_no"            jdbcType="INTEGER"/>   
   <result property="orderNo"        column="order_no"          jdbcType="INTEGER"/>   
   <result property="orgFileName"    column="org_file_name"     jdbcType="VARCHAR"/>   
   <result property="storedFileName" column="stored_file_name"  jdbcType="VARCHAR"/>   
   <result property="fileSize"       column="file_size"         jdbcType="INTEGER"/>   
   <result property="regDate"        column="reg_date"          jdbcType="DATE"/>   
   <result property="delGb"          column="del_gb"            jdbcType="VARCHAR"/>   
</resultMap>
	
	<!-- 1:1문의 조회수 올리기v -->
	<update id="updateBoardInquiryHits">
		UPDATE board 
		SET board_hits = board_hits+1 
		WHERE board_no = #{boardNo}
	</update>
	
	<!-- 공지사항 조회수 올리기v -->
	<update id="updateBoardAnnouncementHits">
		UPDATE board 
		SET board_hits = board_hits+1 
		WHERE board_no = #{boardNo} 
	</update>
	
	<!-- 레시피 조회수 올리기v -->
	<update id="updateBoardRecipeHits">
		UPDATE recipe 
		SET rcp_hits = rcp_hits+1 
		WHERE rcp_no = #{rcpNo} 
	</update>
	
	
	<!-- boardCode 0: 1:1문의 / boardCode 1: 공지사항 -->
	<!-- 1:1문의 insert -->
	<insert id="addBoardInquiry" parameterType="Board" useGeneratedKeys="true" keyProperty="boardNo">
		INSERT INTO board (
			board_no, board_title, board_content, user_id, board_hits, board_code, write_date, board_img1, board_img2, board_img3, board_inq_status
		) VALUES (
			  #{boardNo:INTEGER}
			, #{boardTitle:VARCHAR}
			, #{boardContent:VARCHAR}
			, #{user.userId:VARCHAR}
			, #{boardHits:INTEGER}
			, 0 <!-- bodeCode 0: 1:1문의 -->
			, SYSDATE()
			, #{boardImg1:VARCHAR}
			, #{boardImg2:VARCHAR}
			, #{boardImg3:VARCHAR}
			, #{boardInqStatus}
		)
	</insert>
	
	<insert id="insertRecipeFile" parameterType="hashMap">
		INSERT INTO attach(
			attach_no,
			rcp_no,
			org_file_name,
			stored_file_name,
			file_size
		)VALUES(
			#{attachNo},
			#{rcpNo},
			#{orgFileName},
			#{storedFileName},
			#{fileSize}
		)
    </insert>
	
	<insert id="insertBoardFile" parameterType="hashMap">
		INSERT INTO attach(
			attach_no,
			board_no,
			org_file_name,
			stored_file_name,
			file_size
		)VALUES(
			#{attachNo},
			#{boardNo},
			#{orgFileName},
			#{storedFileName},
			#{fileSize}
		)
    </insert>
    
    <!-- 첨부파일 조회 key가 대문자로 조회됨 -> 카멜 케이스 써야 함 ㅠㅠ -->
	<select id="selectAttachList" parameterType="int" resultType="hashMap">
		SELECT attach_no, org_file_name, ROUND(file_size/1024,1) AS file_size
	  	FROM attach
	 	WHERE board_no = #{boardNo}
	   	AND del_gb = 'N'
	   	ORDER BY attach_no ASC
	</select>

	<!--  첨부파일 다운 
	<select id="selectAttachInfo" parameterType="hashMap" resultType="hashMap">
		SELECT STORED_FILE_NAME, ORG_FILE_NAME
		FROM attach
		WHERE attach_no = #{attachNo}
	</select> -->
	
	<update id="updateAttach" parameterType="hashMap">
    	UPDATE attach SET
    	del_gb = 'Y'
    	WHERE attach_no = #{attachNo}
    </update>
	
	<!-- <insert id="fileBoardInsert" parameterType="FileVO">
       INSERT INTO files (
       FILE_NO, BOARD_NO, FILENAME, FILEORINAME, FILEURL
       ) VALUES (#{fileNo},#{boardNo},#{fileName},#{fileOriName},#{fileUrl})
	</insert>
	
	<insert id="fileRecipeInsert" parameterType="FileVO">
       INSERT INTO files (
       FILE_NO, RCP_NO, FILENAME, FILEORINAME, FILEURL
       ) VALUES (#{fileNo},#{rcpNo},#{fileName},#{fileOriName},#{fileUrl})
	</insert> -->
	
	
	<insert id="addBoardAnnouncement" parameterType="Board" useGeneratedKeys="true" keyProperty="boardNo">
		INSERT INTO board (
			board_no, board_title, board_content, user_id, board_hits, board_code, write_date, board_img1, board_img2, board_img3, board_inq_status
		) VALUES (
			  #{boardNo:INTEGER}
			, #{boardTitle:VARCHAR}
			, #{boardContent:VARCHAR}
			, #{user.userId:VARCHAR}
			, #{boardHits:INTEGER}
			, 1 <!-- bodeCode 1: 공지사항 -->
			, SYSDATE()
			, #{boardImg1:VARCHAR}
			, #{boardImg2:VARCHAR}
			, #{boardImg3:VARCHAR}
			, #{boardInqStatus}
		)
	</insert>
	
	<!-- 1:1문의 update -->
	<update id="updateBoardInquiry" parameterType="Board">
		UPDATE board
		SET
			  board_title = #{boardTitle:VARCHAR}
			, board_content = #{boardContent:VARCHAR}
			, board_code = 0
			, board_inq_status = #{boardInqStatus}
		WHERE
			board_no = #{boardNo}
	</update>
	
	<!-- 공지사항 update -->
	<update id="updateBoardAnnouncement" parameterType="Board">
		UPDATE board
		SET
			  board_title = #{boardTitle:VARCHAR}
			, board_content = #{boardContent:VARCHAR}
			, board_code = 1
		WHERE
			board_no = #{boardNo}
	</update>
	<!-- 1:1문의 상세 조회: 답변대기중 또는 답변완료로 출력되어야 함 -->
	<select id="getBoardInquiry" parameterType="int" resultType="Board" resultMap="boardSelectMap">
		SELECT
			board_no, board_title, board_content, user_id, write_date, board_inq_status, board_hits
		FROM
			board b
		WHERE board_no = #{boardNo}
		AND board_code = 0
		AND (board_inq_status = false OR board_inq_status = true)
	</select>
	<!-- 1:1문의 상세 조회: 답변대기중 또는 답변완료로 출력되어야 함 -->
	<!-- <select id="getBoardInquiry" parameterType="int" resultType="Board" resultMap="boardSelectMap">
		SELECT
			b.board_no, b.board_title, b.board_content, b.user_id, b.write_date, b.board_inq_status, b.board_hits, c.comment_content
		FROM
			board b, comment c
		WHERE b.board_no = c.board_no
		AND b.board_no = c.board_no
		AND b.board_no = #{boardNo}
		AND board_code = 0
		AND (board_inq_status = false OR board_inq_status = true)
	</select> -->
	
	<!-- 1:1문의 답변(댓글)대기중 -> 답변(댓글)완료 -->
	<update id="updateBoardInqStatus" parameterType="Board">
		UPDATE board
		SET
			board_inq_status = true
		WHERE
			board_no = #{boardNo} 
	</update>
	
		<!-- 공지사항 상세 조회: 1 -->
	<select id="getBoardAnnouncement" parameterType="int" resultType="Board" resultMap="boardSelectMap">
		SELECT
			board_no, board_title, board_content, user_id, write_date, board_hits
		FROM
			board
		WHERE
			board_code = 1
		AND 			
			board_no = #{boardNo}
	</select>
	
	<!-- 1:1문의 목록 조회 0, 답변상태 쿼리 필요 -->
	<select id="getBoardInquiryList" parameterType="Board" resultType="Board">
		SELECT
			board_no, board_title, board_inq_status
		FROM
			board
		WHERE
			board_code = 0
		AND
			(board_inq_status = false OR board_inq_status = true)
		ORDER BY
			board_no ASC
		 LIMIT
         #{paginationInfo.firstRecordIndex}, #{recordsPerPage}
	</select>
	
	<!-- 공지사항 목록 조회 1 -->
	<select id="getBoardAnnouncementList" parameterType="Board" resultType="Board">
		SELECT
			board_no, board_title, write_date
		FROM
			board
		WHERE
			board_code = 1
		ORDER BY
			board_no ASC
		 LIMIT
         #{paginationInfo.firstRecordIndex}, #{recordsPerPage}
	</select>

	<!--  1:1문의 delete -->
	<delete id="deleteBoardInquiry" parameterType="int">
		DELETE 
		FROM board
		WHERE
			board_no = #{boardNo} AND board_code = 0
	</delete>
	
	<!--  공지사항 delete -->
	<delete id="deleteBoardAnnouncement" parameterType="int">
		DELETE 
		FROM board
		WHERE
			board_no = #{boardNo} AND board_code = 1
	</delete>
	
	<!-- 1:1문의 목록 개수 -->
	<select id="getBoardInquiryTotalCount" parameterType="Board" resultType="int">
		SELECT
			COUNT(*)
		FROM
			board b, users u
		WHERE b.user_id = u.user_id AND (u.role='관리자' || b.user_id=#{user.userId}) AND board_code=0
		ORDER BY board_no;
	</select>
	
	<!-- 공지사항 목록 개수 -->
	<select id="getBoardAnnouncementTotalCount" parameterType="Board" resultType="int">
		SELECT
			COUNT(*)
		FROM
			board b, users u
		WHERE b.user_id = u.user_id AND (u.role='관리자' || b.user_id=#{user.userId}) AND board_code=1
		ORDER BY board_no;	
	</select>
	<!-- 1:1문의 목록 개수 -->
	
	<!-- Recipe -->
	<sql id="recipeColumns">
	rcp_no
	,user_id
	,rcp_title
	,rcp_content
	,rcp_date
	,rcp_ingredient
	,rcp_thumb
	,rcp_info
	,rcp_hits
	,comment_count	
	,rcp_Jjimcnt	
	,recommend_count
	</sql>
	
	<!-- Recipe insert -->
	<insert id="addRecipe" parameterType="Recipe" useGeneratedKeys="true" keyProperty="rcpNo">
		INSERT INTO recipe (
			rcp_no, rcp_title, user_id, rcp_content, rcp_ingredient, rcp_info, rcp_date, rcp_hits
		) VALUES (
			#{rcpNo:INTEGER}
			,#{rcpTitle:VARCHAR}
			,#{user.userId:VARCHAR}
			, #{rcpContent:VARCHAR}
			, #{rcpIngredient:VARCHAR}
			, #{rcpInfo:VARCHAR}
			, SYSDATE()
			, 0
		)
	</insert>
	
	<!-- Recipe getRecipe -->
	<select id="getRecipe" parameterType="int" resultType="Recipe" resultMap="recipeSelectMap">
		SELECT
			rcp_no, user_id, rcp_title, rcp_content, rcp_date, rcp_ingredient, rcp_thumb, rcp_info, rcp_hits, comment_count, rcp_jjimcnt, recommend_count
		FROM
			recipe
		WHERE
			rcp_no = #{rcpNo}
	</select>

	<!-- ?Recipe selectList? -->
	<select id="getRecipeList" parameterType="Recipe" resultType="Recipe">
		SELECT
			rcp_no, rcp_title, rcp_date, rcp_hits
		FROM
			recipe
		ORDER BY
			rcp_no ASC
		LIMIT
         #{paginationInfo.firstRecordIndex}, #{recordsPerPage}
	</select>

	<!-- Recipe update -->
	<update id="updateRecipe" parameterType="Recipe">
		UPDATE recipe
		SET
			rcp_title = #{rcpTitle:VARCHAR}
			, rcp_content = #{rcpContent:VARCHAR}
			, rcp_ingredient = #{rcpIngredient:VARCHAR}
			, rcp_info = #{rcpInfo:VARCHAR}
		WHERE
			rcp_no = #{rcpNo}
	</update>

	<!-- 레시피 목록 개수 -->
	<select id="getRecipeTotalCount" parameterType="Board" resultType="int">
		SELECT
			COUNT(*)
		FROM
			recipe
		ORDER BY rcp_no	
	</select>

	<!--  Recipe delete -->
	<delete id="deleteRecipe" parameterType="int">
		DELETE 
		FROM recipe
		WHERE
			rcp_no = #{rcpNo}
	</delete>
	
	<!-- Review insert -->
	<update id="addReview" parameterType="Orders">
	UPDATE orders
	SET
	  store_name = #{storeName:VARCHAR}
	, user_id = #{userId:VARCHAR}	
	, review_title = #{reviewTitle:VARCHAR}
	, review_content = #{reviewContent:VARCHAR}
	, review_date = SYSDATE()
	, review_star = #{reviewStar:INTEGER}
	, review_img1 = #{reviewImg1:VARCHAR}
	, review_img2 = #{reviewImg2:VARCHAR}
	, review_img3 = #{reviewImg3:VARCHAR}
	WHERE order_no = #{orderNo}
	</update>
	
	<!--  Review delete -->
	<delete id="deleteReview" parameterType="int">
		DELETE 
		FROM orders
		WHERE
			order_no = #{orderNo}
	</delete>
	
	<!-- Review 상세 조회 -->
	<select id="getReview" parameterType="int" resultType="Orders" resultMap="ordersSelectMap">
		SELECT
			o.order_no, s.store_name, o.user_id, o.review_title, o.review_content, o.review_date, o.review_star, o.review_img1, o.review_img2, o.review_img3
		FROM
			orders o, store s
		WHERE o.store_no = s.store_no
		AND o.order_no = #{orderNo}
	</select>
	
	<!-- 상점후기 목록 개수 -->
	<select id="getReviewTotalCount" parameterType="Orders" resultType="int">
		SELECT
			COUNT(*)
		FROM
			orders
		ORDER BY order_no	
	</select>
	
	<!--   -->
	<select id="getReviewList" parameterType="Orders" resultType="Orders">
		SELECT
			*
		FROM
			orders
		WHERE
			order_no = #{orderNo}
		LIMIT
         #{startPage}, #{recordsPerPage}
	</select>
	
	 <sql id="commentColumns">
	comment_no
	,board_no
	,rcp_no
	,comment_content
	,comment_writer
	,comment_date
	</sql> 
	
	 <insert id="addComment" parameterType="Comment" useGeneratedKeys="true" keyProperty="commentNo">
		INSERT INTO comment (
			comment_no, board_no, rcp_no, comment_content, comment_writer, comment_date
		) VALUES (
			  #{commentNo:INTEGER}
			, #{boardNo:INTEGER}
			, #{rcpNo:INTEGER}
			, #{commentContent:VARCHAR}
			, #{commentWriter:VARCHAR}
			, SYSDATE()
		)
	</insert>
	
	<!-- 댓글 조회 -->
	<select id="getComment" resultType="Comment" parameterType="int" resultMap="boardSelectMap">
    	SELECT
    		  comment_no, comment_content, comment_writer, comment_date
    	 FROM comment
    	WHERE board_no = #{boardNo}
	</select>
	
	
	
	<!-- <update id="updateComment" parameterType="Comment">
		UPDATE comment
		SET
			comment_content = #{commentContent:VARCHAR}
			,comment_writer = #{commentWriter:VARCHAR}
		WHERE
			comment_no = #{commentNo}
	</update>
	
	<delete id="deleteComment" parameterType="Integer">
		DELETE 
		FROM comment
		WHERE
			comment_no = #{commentNo}
	</delete>
	
	<select id="getCommentTotalCount" parameterType="Comment" resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			comment
		WHERE
			board_no = #{boardNo}
	</select>

	<select id="getCommentList" parameterType="Comment" resultType="Comment">
		SELECT
			<include refid="commentColumns" />
		FROM
			comment
		WHERE
			board_no = #{boardNo}
		ORDER BY
			board_no DESC,
			comment_date DESC
	</select> -->
	
	<insert id="addStoreJjim" parameterType="Jjim" useGeneratedKeys="true" keyProperty="jjimNo">
		INSERT INTO jjim (store_no, user_id)
		VALUES(#{storeNo}, #{userId})
	</insert>

	<insert id="addRecipeJjim" parameterType="Jjim" useGeneratedKeys="true" keyProperty="jjimNo">
		INSERT INTO jjim (rcp_no, user_id)
		VALUES(#{rcpNo}, #{userId})
	</insert>
	
	<delete id="deleteStoreJjim" parameterType="Jjim">
		DELETE FROM jjim
		WHERE store_no = #{storeNo} AND user_id = #{userId}
	</delete>

	<delete id="deleteRecipeJjim" parameterType="Jjim">
		DELETE FROM jjim
		WHERE rcp_no = #{rcpNo} AND user_id = #{userId}
	</delete>
	
	<select id="updateRecipeJjim">
		UPDATE recipe
		SET
		rcp_jjimcnt = (SELECT COUNT(*)
		FROM jjim
		WHERE rcp_no = #{rcpNo})
		WHERE rcp_no = #{rcpNo}
	</select>
	
	 <!-- <select id="updateStoreJjim">
		UPDATE store
		SET
		store_jjimcnt = (SELECT COUNT(*)
		FROM jjim
		WHERE store_no = #{storeNo})
		WHERE store_no = #{storeNo}
	</select> -->

	<select id="getRecipeJjim" resultType="Jjim">
		SELECT COUNT(jjim_no) FROM jjim WHERE rcp_no = #{rcpNo}
		AND user_id = #{user.userId}
	</select>
	
	<select id="getStoreJjim" resultType="Jjim">
		SELECT COUNT(jjim_no) FROM jjim WHERE store_no = #{storeNo}
		AND user_id = #{user.userId}
	</select>

	<!--  레시피 추천수 -->
	<update id="updateRecipeReco" parameterType="int">
		UPDATE recipe
		SET
		recommend_count = recommend_count+1
		WHERE rcp_no = #{rcpNo}
	</update>
	
	<!--  댓글 추천수 -->
	<update id="updateCommentReco" parameterType="int">
		UPDATE comment
		SET
		recommend_count = recommend_count+1
		WHERE comment_no = #{commentNo}
	</update>
	
	<!-- 레시피 추천수 취소 -->
	<update id="updateRecipeRecoCancel" parameterType="int">
		UPDATE recipe
		SET
		recommend_count = recommend_count-1
		WHERE rcp_no = #{rcpNo}
	</update>
	
	<!-- 댓글 추천수 취소 -->
	<update id="updateCommentRecoCancel" parameterType="int">
		UPDATE comment
		SET
		recommend_count = recommend_count-1
		WHERE comment_no = #{commentNo}
	</update>
	
	<!-- 레시피 추천 시 recommend 테이블에 add -->
	<insert id="addRecipeReco" parameterType="Recommend" useGeneratedKeys="true" keyProperty="recommendNo">
		INSERT INTO recommend(recommend_no, rcp_no, user_id)
		VALUES (
		( SELECT IFNULL(MAX(recommend_no), 0) + 1 FROM recommend a), 
		#{rcpNo}, 
		#{userId})
	</insert>

	<!-- 댓글 추천 시 recommend 테이블에 add -->
	<insert id="addCommentReco">
		INSERT INTO comment(recommend_no, comment_no, user_id)
		VALUES ((SELECT IFNULL(MAX(recommendNo), 0) + 1 FROM recommend), #{recommendNo}, #{userId})
	</insert>
	
	<!-- 레시피 추천취소 시 delete -->
	<delete id="deleteRecipeReco">
		DELETE FROM recommend
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</delete>
	
	<!-- 댓글 추천취소 시 delete -->
	<delete id="deleteCommentReco">
		DELETE FROM recommend
		WHERE comment_no = #{commentNo}
		AND user_id = #{userId}
	</delete>
	
	<!-- 레시피 추천 시 recocheck를 1로 만들어서 중복방지 -->
	<update id="updateRecipeRecoCheck" parameterType="Map">
		UPDATE recommend
		SET
		recocheck = 1
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 댓글 추천 시 recocheck를 1로 만들어서 중복방지 -->
	<update id="updateCommentRecoCheck">
		UPDATE recommend
		SET
		recocheck = 1
		WHERE comment_no = #{commentNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 레시피 추천취소 시 다시 0 -->
	<update id="updateRecipeRecoCheckCancel">
		UPDATE recommend
		SET
		recocheck = 0
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 댓글 추천취소 시 다시 0 -->
	<update id="updateCommentRecoCheckCancel">
		UPDATE recommend
		SET
		recocheck = 0
		WHERE comment_no = #{commentNo}
		AND user_id = #{userId}
	</update>
	
	<!-- 레시피 추천 중복방지 select문 -->
	<select id="recipeRecoCheck" resultType="int">
		SELECT COUNT(*)
		FROM recommend
		WHERE rcp_no = #{rcpNo}
		AND user_id = #{userId}
	</select>
	
	<!-- 댓글 추천 중복방지 select문 -->
	<select id="commentRecoCheck" resultType="int">
		SELECT COUNT(*)
		FROM recommend
		WHERE comment_no = #{comment_no}
		AND user_id = #{userId}
	</select>

</mapper>