<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jinwook.home.mapper.BoardMapper">

	<sql id="boardColumns">
	board_no
	,user_id
	,board_title
	,board_content
	,board_hits
	,board_code
	,write_date
	,board_img1
	,board_img2
	,board_img3
	,board_inq_status	
	</sql>
	
	<!-- Board insert -->
	<insert id="addBoard" parameterType="com.jinwook.home.service.domain.Board" useGeneratedKeys="true" keyProperty="boardNo">
		INSERT INTO board (
			<include refid="boardColumns" />
		) VALUES (
			  #{boardNo:INTEGER}
			, #{user.userId:VARCHAR}
			, #{boardTitle:VARCHAR}
			, #{boardContent:VARCHAR}
			, #{boardHits:INTEGER}
			, #{boardCode}
			, SYSDATE()
			, #{boardImg1:VARCHAR}
			, #{boardImg2:VARCHAR}
			, #{boardImg3:VARCHAR}
			, #{boardInqStatus}
		)
	</insert>

	<!-- Board update -->
	<update id="updateBoard" parameterType="com.jinwook.home.service.domain.Board">
		UPDATE board
		SET
			  board_title = #{boardTitle:VARCHAR}
			, board_content = #{boardContent:VARCHAR}
			, board_code = #{boardCode}
			, board_inq_status = #{boardInqStatus}
		WHERE
			board_no = #{boardNo}
	</update>
	
	<!-- Board selectDetail -->
	<select id="getBoard" parameterType="int" resultType="com.jinwook.home.service.domain.Board">
		SELECT
			<include refid="boardColumns" />
		FROM
			board
		WHERE
			board_no = #{boardNo}
	</select>

	<!-- ?Board selectList? -->
	<select id="getBoardList" parameterType="com.jinwook.home.service.domain.Board" resultType="com.jinwook.home.service.domain.Board">
		SELECT
			<include refid="boardColumns" />
		FROM
			board
		WHERE
			board_no = #{boardNo}
	</select>

	<!--  Board delete -->
	<delete id="deleteBoard" parameterType="int">
		DELETE 
		FROM board
		WHERE
			board_no = #{boardNo}
	</delete>
	
	<!-- 게시판 목록 개수 -->
	<select id="getBoardTotalCount" parameterType="com.jinwook.home.service.domain.Board" resultType="int">
		SELECT
			COUNT(*)
		FROM
			board
		ORDER BY board_no	
	</select>
	
	<!-- Recipe -->
	<sql id="recipeColumns">
	rcp_no
	,user_id
	,rcp_title
	,rcp_content
	,rcp_date
	,rcp_ingredient
	,rcp_thumb
	,rcp_info
	,rcp_hits
	,comment_count	
	</sql>
	
	<!-- Recipe insert -->
	<insert id="addRecipe" parameterType="com.jinwook.home.service.domain.Recipe" useGeneratedKeys="true" keyProperty="rcpNo">
		INSERT INTO recipe (
			<include refid="recipeColumns" />
		) VALUES (
			  #{rcpNo:INTEGER}
			, #{user.userId:VARCHAR}
			, #{rcpTitle:VARCHAR}
			, #{rcpContent:VARCHAR}
			, SYSDATE()
			, #{rcpIngredient:VARCHAR}
			, #{rcpThumb:VARCHAR}
			, #{rcpInfo:VARCHAR}
			, #{rcpHits:INTEGER}
			, #{commentCount:INTEGER}
		)
	</insert>
	
	<!-- Recipe getRecipe -->
	<select id="getRecipe" parameterType="int" resultType="com.jinwook.home.service.domain.Recipe">
		SELECT
			<include refid="recipeColumns" />
		FROM
			recipe
		WHERE
			rcp_no = #{rcpNo}
	</select>

	<!-- ?Recipe selectList? -->
	<select id="getRecipeList" parameterType="com.jinwook.home.service.domain.Recipe" resultType="com.jinwook.home.service.domain.Recipe">
		SELECT
			<include refid="recipeColumns" />
		FROM
			recipe
		WHERE
			rcp_no = #{rcpNo}
	</select>

	<!-- Recipe update -->
	<update id="updateRecipe" parameterType="com.jinwook.home.service.domain.Recipe">
		UPDATE recipe
		SET
			rcp_title = #{rcpTitle:VARCHAR}
			, rcp_content = #{rcpContent:VARCHAR}
			, rcp_ingredient = #{rcpIngredient:VARCHAR}
			, rcp_thumb = #{rcpThumb:VARCHAR}
			, rcp_info = #{rcpInfo:VARCHAR}
		WHERE
			rcp_no = #{rcpNo}
	</update>

	<!-- 레시피 목록 개수 -->
	<select id="getRecipeTotalCount" parameterType="com.jinwook.home.service.domain.Recipe" resultType="int">
		SELECT
			COUNT(*)
		FROM
			recipe
		ORDER BY rcp_no	
	</select>

	<!--  Recipe delete -->
	<delete id="deleteRecipe" parameterType="int">
		DELETE 
		FROM recipe
		WHERE
			rcp_no = #{rcpNo}
	</delete>
	
	<!-- Review insert -->
	<update id="addReview" parameterType="com.jinwook.home.service.domain.Orders">
	UPDATE orders
	SET
		review_title = #{reviewTitle:VARCHAR}
	, review_content = #{reviewContent:VARCHAR}
	, review_date = SYSDATE()
	, review_star = #{reviewStar:INTEGER}
	, review_img1 = #{reviewImg1:VARCHAR}
	, review_img2 = #{reviewImg2:VARCHAR}
	, review_img3 = #{reviewImg3:VARCHAR}
	WHERE store_no = #{storeNo}
	</update>
	
	<!--  Review delete -->
	<delete id="deleteReview" parameterType="int">
		DELETE 
		FROM orders
		WHERE
			order_no = #{orderNo}
	</delete>
	
		<!-- 상점후기 목록 개수 -->
	<select id="getReviewTotalCount" parameterType="com.jinwook.home.service.domain.Recipe" resultType="int">
		SELECT
			COUNT(*)
		FROM
			orders
		ORDER BY order_no	
	</select>
	
		<!--   -->
	<select id="getReviewList" parameterType="com.jinwook.home.service.domain.Orders" resultType="com.jinwook.home.service.domain.Orders">
		SELECT
			*
		FROM
			orders
		WHERE
			order_no = #{orderNo}
	</select>
	
	 <sql id="commentColumns">
	comment_no
	,user_id
	,rcp_no
	,board_no
	,comment_content
	,comment_date
	,recommend_count	
	</sql> 
	
	 <insert id="addComment" parameterType="com.jinwook.home.service.domain.Comment" useGeneratedKeys="true" keyProperty="commentNo">
		INSERT INTO comment (
			<include refid="commentColumns" />
		) VALUES (
			  #{commentNo:INTEGER}
			, #{user.userId:VARCHAR}
			, #{rcpNo:INTEGER}
			, #{boardNo:INTEGER}
			, #{commentContent:VARCHAR}
			, SYSDATE()
			, #{recommendCount:INTEGER}
		)
	</insert> 
	
		<!--  Comment delete -->
	<delete id="deleteComment" parameterType="int">
		DELETE 
		FROM comment
		WHERE
			comment_no = #{commentNo}
	</delete>

	<!-- Comment update -->
	<update id="updateComment" parameterType="com.jinwook.home.service.domain.Comment">
		UPDATE comment
		SET
			comment_content = #{commentContent:VARCHAR}
			, comment_date = SYSDATE()
		WHERE
			comment_no = #{commentNo}
	</update>

	 <sql id="JJimColumns">
	JJim_no
	,user_id
	,rcp_no
	,board_no
	,comment_content
	,comment_date
	,recommend_count	
	</sql>
	
	
	

</mapper>