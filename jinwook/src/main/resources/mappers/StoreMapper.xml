<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jinwook.home.mapper.StoreMapper">


	<update id="updateStoreProduct" parameterType="Product">
		UPDATE product
		SET
		price = #{price}
		, prod_info = #{prodInfo}
		, prod_img = #{prodImg}
		,prod_orign = #{prodOrign}
		WHERE
		prod_no = #{prodNo}
	</update>

	<update id="isSoldout" parameterType="Product">
		UPDATE product
		SET
		is_soldout=#{isSoldout}
		WHERE
		prod_no=#{prodNo}
	</update>

	<update id="updateStore" parameterType="Store">
		UPDATE store
		SET
		store_intro=#{storeIntro:VARCHAR},
		store_phone=#{storePhone:VARCHAR},
		store_image=#{storeImage:VARCHAR},
		start_time=#{startTime},
		end_time=#{endTime},
		holiday=#{holiday:VARCHAR},
		bank=#{bank:VARCHAR},
		acc_no=#{accNo:VARCHAR}
		WHERE store_no = #{storeNo}
	</update>


	<delete id="deleteStoreProduct" parameterType="product">
		DELETE FROM
		product
		WHERE prod_no = #{prodNo}
	</delete>

	<insert id="addStoreProduct" parameterType="Product"
		useGeneratedKeys="true" keyProperty="prodNo">
		INSERT INTO
		product(prod_no,store_no,prod_name, price, prod_info, prod_img,
		prod_orign, is_soldout)
		VALUES(#{prodNo:INTEGER},#{storeNo:INTEGER},
		#{prodName},#{price}, #{prodInfo}, #{prodImg},#{prodOrign},1)
	</insert>

	<update id="isOpen" parameterType="Store">
		UPDATE store
		SET
		is_open=#{isOpen}
		WHERE
		store_no=#{storeNo}
	</update>

	<select id="getStoreReviewStar" parameterType="int"
		resultType="Orders">
		SELECT ROUND(AVG(review_star),1)
		FROM orders
		WHERE
		store_no=#{storeNo}
	</select>


	<select id="getStore" parameterType="int" resultType="Store">
		SELECT
		store_no, store_name, store_type, store_addr, start_time, end_time,
		holiday, store_intro
		FROM store
		WHERE
		store_no =#{storeNo}
	</select>

	<select id="getStoreProductList" parameterType="int"
		resultType="Product">
		SELECT
		prod_no, prod_name, price, prod_orign, prod_info
		FROM
		product
		WHERE
		store_no=#{storeNo}
	</select>

	<select id="getCouponList" parameterType="String"
		resultType="Coupon">
		SELECT
		coupon_no, coupon_type, coupon_dc, coupon_valid_date
		FROM coupon
		WHERE
		coupon_status=0 AND
		user_id=#{userId}
	</select>


	<update id="addOrderCoupon" parameterType="Coupon">
		UPDATE coupon
		SET
		coupon_status=#{couponStatus}
		WHERE coupon_no=#{couponNo}
	</update>

	<select id="getStoreWallet" parameterType="String"
		resultType="store">
		SELECT
		s.total_earn, u.jp_balance
		FROM store s, users u
		WHERE
		s.user_id=u.user_id AND
		s.user_id=#{userId}
	</select>

	<select id="getStoreWalletRefund" parameterType="String"
		resultType="request">
		SELECT
		res_date,req_date,refund_money,req_status
		FROM request
		WHERE
		user_id=#{userId}
	</select>
	
	<select id="getStoreTotalCount" parameterType="Store"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		store
	</select>

	<select id="getCouponTotalCount" parameterType="Coupon"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		coupon
	</select>

	<select id="getProductTotalCount" parameterType="Product"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		product
	</select>
	
	<select id="getRequestTotalCount" parameterType="Request"
		resultType="int">
		SELECT
		COUNT(*)
		FROM
		request
	</select>
	
	



</mapper>