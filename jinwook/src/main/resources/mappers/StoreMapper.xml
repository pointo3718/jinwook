<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jinwook.home.mapper.StoreMapper">

<resultMap type="store" id="storeSelectMap">
   <result property="storeNo"             column="store_no"       jdbcType="INTEGER"/>   
   <result property="userId"             column="user_id"        jdbcType="VARCHAR"/>   
   <result property="storeName"         column="store_name"     jdbcType="VARCHAR"/>
   <result property="storeAddr"         column="store_addr"     jdbcType="VARCHAR"/>
   <result property="storeType"         column="store_type"     jdbcType="CHAR"/>
   <result property="storeStatus"         column="store_status"   jdbcType="VARCHAR"/>
   <result property="storePhone"         column="store_phone"    jdbcType="VARCHAR"/>
   <result property="storeIntro"         column="store_intro"    jdbcType="VARCHAR"/>
   <result property="storeStart"         column="store_start"    jdbcType="DATE"/>
   <result property="startTime"         column="start_time"     jdbcType="TIME"/>
   <result property="endTime"             column="end_time"       jdbcType="TIME"/>
   <result property="holiday"             column="holiday"        jdbcType="VARCHAR"/>
   <result property="businessCard"      column="business_card" jdbcType="VARCHAR"/>
   <result property="storeImage"         column="store_image"    jdbcType="VARCHAR"/>
   <result property="accNo"             column="acc_no"         jdbcType="VARCHAR"/>
   <result property="bank"                 column="bank"           jdbcType="VARCHAR"/>
   <result property="totalEarn"         column="total_earn"     jdbcType="INTEGER"/>
   <result property="isOpen"             column="is_open"        jdbcType="TINYINT"/>  
   <result property="latitude"                 column="latitude"           jdbcType="INTEGER"/>
   <result property="longitude"                 column="longitude"           jdbcType="INTEGER"/> 
   <result property="user.jpBalance"     column="jp_balance"     jdbcType="INTEGER"/>
   <result property="user.userName"     column="user_name"     jdbcType="VARCHAR"/>   
   <result property="user.businessNo"     column="business_no"     jdbcType="VARCHAR"/>  
   <result property="user.regDate"     column="reg_date"     jdbcType="DATE"/>     
   <result property="orders.reviewStar"  column="review_star"    jdbcType="INTEGER"/>
   <result property="orders.orderPrice"  column="order_price"    jdbcType="DATE"/>
   <result property="orders.orderNo"  column="order_no"    jdbcType="INTEGER"/>
   <result property="orders.orderDate"  column="order_date"    jdbcType="DATE"/>
   <result property="orders.buyerName"  column="buyer_name"    jdbcType="VARCHAR"/>
   <result property="product.prodNo"     column="prod_no"        jdbcType="INTEGER"/>     
   <result property="product.prodName"   column="prod_name"      jdbcType="VARCHAR"/>     
   <result property="product.prodImg"   column="prod_img"      jdbcType="VARCHAR"/>     
   <result property="product.price"      column="price"          jdbcType="INTEGER"/>     
   <result property="product.prodOrign"  column="prod_orign"    jdbcType="VARCHAR"/>   
   <result property="product.prodInfo"  column="prod_info"    jdbcType="VARCHAR"/>  
   <result property="product.isSoldout"  column="is_soldout"    jdbcType="INTEGER"/>       
   <result property="request.resDate"      column="res_date"     jdbcType="DATE"/>     
   <result property="request.reqDate"  column="req_date"    jdbcType="DATE"/>   
   <result property="request.refundMoney"  column="refund_money"    jdbcType="INTEGER"/> 
   <result property="request.userId"  column="user_id"    jdbcType="VARCHAR"/>    
   <result property="request.reqStatus"  column="req_status"    jdbcType="CHAR"/>              
</resultMap>

<resultMap type="coupon" id="couponSelectMap">
   <result property="couponNo"  column="coupon_no"    jdbcType="INTEGER"/>
   <result property="user.userId"  column="user_id"    jdbcType="VARCHAR"/>   
   <result property="couponType"  column="coupon_type"    jdbcType="CHAR"/>   
   <result property="couponStatus"  column="coupon_status"    jdbcType="INTEGER"/>   
   <result property="couponValidDate"  column="coupon_valid_date"    jdbcType="DATE"/>   
   <result property="couponDc"  column="coupon_dc"    jdbcType="INTEGER"/>      
</resultMap>


   <update id="updateStore" parameterType="Store" useGeneratedKeys="true" keyProperty="storeNo">
      UPDATE store
      SET
      store_intro=#{storeIntro:VARCHAR},
      store_phone=#{storePhone:VARCHAR},
      store_image=#{storeImage:VARCHAR},
      start_time=#{startTime},
      end_time=#{endTime},
      holiday=#{holiday:VARCHAR},
      bank=#{bank:VARCHAR},
      acc_no=#{accNo:VARCHAR}
      WHERE store_no = #{storeNo}
   </update>
   
   <insert id="addStoreProduct" parameterType="Product"
      useGeneratedKeys="true" keyProperty="prodNo">
      INSERT INTO
      product(prod_no,store_no,prod_name, price, prod_info, prod_img,
      prod_orign, is_soldout)
      VALUES(#{prodNo:INTEGER},#{storeNo:INTEGER},
      #{prodName:VARCHAR},#{price:INTEGER}, #{prodInfo:VARCHAR}, #{prodImg:VARCHAR},#{prodOrign:VARCHAR},1)
   </insert>
   
   <update id="updateStoreProduct" parameterType="Product">
      UPDATE product
      SET
      price = #{price}
      , prod_info = #{prodInfo}
      , prod_img = #{prodImg}
      ,prod_orign = #{prodOrign}
      WHERE
      prod_no = #{prodNo}
   </update>
   
   <delete id="deleteStoreProduct" parameterType="int">
      DELETE FROM
      product
      WHERE prod_no = #{prodNo}
   </delete>

   <update id="isSoldout" parameterType="Product">
      UPDATE product
      SET
      is_soldout=0
      WHERE
      prod_no=#{prodNo}
   </update>
   
     <update id="isSell" parameterType="Product">
      UPDATE product
      SET
      is_soldout=1
      WHERE
      prod_no=#{prodNo}
   </update>

   <update id="isOpen" parameterType="Store">
      UPDATE store
      SET
      is_open=#{isOpen}
      WHERE
      store_no=#{storeNo}
   </update>
   
   <update id="addOrdersCoupon" parameterType="int">
      UPDATE coupon
      SET
      coupon_status=1
      WHERE 
      coupon_no=#{couponNo}
   </update>
   
   <select id="getCouponList" parameterType="String"
      resultType="Coupon">
      SELECT
      coupon_no, coupon_type, coupon_dc, coupon_valid_date
      FROM coupon
      WHERE
      coupon_status=0 AND
      coupon_valid_date >= sysdate() AND
      user_id=#{userId}
   </select>
   
   <select id="getCouponCount" parameterType="String"
      resultType="int">
      SELECT
      count(*)
      FROM coupon
      WHERE
      coupon_status=0 AND
      coupon_valid_date >= sysdate() AND
      user_id=#{userId};
   </select>
   
   <select id="getStore" parameterType="int" resultMap="storeSelectMap">
        SELECT
      s.store_no, s.store_phone, s.store_name, s.store_type, s.store_addr, s.start_time, s.end_time, s.holiday, s.is_open,
      s.store_intro, vt.review_star, p.prod_no, p.prod_name, p.prod_img, p.price, p.prod_orign, p.prod_info, p.is_soldout      
      FROM store s, product p, orders o,(SELECT ROUND(AVG(review_star),1) review_star 
                  FROM orders
                  WHERE store_no=#{storeNo})vt
      WHERE    s.store_no=p.store_no AND
                  p.store_no=s.store_no AND
           s.store_no = #{storeNo}
      GROUP BY  p.prod_no
   </select>
   
   <select id="getStoreOnly" parameterType="int" resultMap="storeSelectMap">
   SELECT
      s.store_no, s.store_phone, s.store_name, s.store_type, s.store_addr, s.start_time, s.end_time, s.holiday, s.is_open,
      s.store_intro, vt.review_star
      FROM store s, orders o,(SELECT ROUND(AVG(review_star),1) review_star 
                  FROM orders
                  WHERE store_no=#{storeNo})vt
      WHERE s.store_no=#{storeNo}
            GROUP BY store_no

   </select>
   
   <select id="getStoreInfo" parameterType="String" resultMap="storeSelectMap">   
   SELECT
   u.user_name, u.jp_balance, s. store_name, s. store_addr, s. total_earn, s.store_no, s.store_intro,s.store_image, s.holiday,
   u.business_no, s.business_card,s.bank, s.acc_no, s.start_time, s.end_time, s.store_type, s.store_phone, s.store_start, 
   s.store_status, u.reg_date, s.is_open
   FROM users u, store s
   WHERE u.user_id=s.user_id AND
   u.user_id = #{userId}
   </select>

   <!-- <select id="getStoreWallet" parameterType="int"
      resultMap="storeSelectMap">
      SELECT
      s.total_earn, u.jp_balance, r.res_date, r.req_date, r.refund_money, r.req_status
      FROM store s, users u, request r
      WHERE s.user_id=u.user_id AND
         s.user_id=r.user_id AND
         u.user_id=r.user_id AND
         r.store_no=s.store_no AND 
          s.store_no=#{storeNo}
    </select>-->
    
    <select id="getStoreRefund" parameterType="int"
      resultMap="storeSelectMap">
     SELECT
     r.res_date, r.req_date, r.refund_money, r.req_status, r.store_no
      FROM request r, store s
      WHERE r.user_id = s.user_id AND
            r.store_no = s.store_no AND 
            refund_money is not null AND 
            r.store_no=#{storeNo}
   </select>
   
    <select id="getStoreWallet" parameterType="Store"
      resultMap="storeSelectMap">
      SELECT
      vt.total_earn, u.jp_balance, o.order_no, o.order_date,
      o.order_price, o.buyer_name, o.store_no
      FROM users u,orders o, (SELECT
      SUM(order_price) total_earn
      FROM orders
      WHERE order_status=5 AND
      <if test="orderDateStart and orderDateEnd != null">
         DATE(order_date) between #{orderDateStart} and
         #{orderDateEnd}
      </if>
      <if test="orderDateStart || orderDateEnd == null">
         DATE(order_date) between DATE(sysdate()) and DATE(sysdate())
      </if>
      AND
      store_no=#{storeNo})vt
      WHERE u.user_id=o.user_id AND
      o.order_status=5 AND
      <if test="orderDateStart and orderDateEnd != null">
         DATE(o.order_date) between #{orderDateStart} and
         #{orderDateEnd}
      </if>
      <if test="orderDateStart || orderDateEnd == null">
         DATE(o.order_date) between DATE(sysdate()) and DATE(sysdate())
      </if>
      AND
      o.store_no=#{storeNo}
      ORDER BY order_no
   </select>
   
   
    <select id="getStoreListByOrderCount" resultMap="storeSelectMap">
	SELECT COUNT(*), o.store_no, s.store_name, s.store_type, s.store_addr
	FROM orders o, store s
	WHERE o.store_no = s.store_no AND
		 s.store_status !=0
	GROUP BY o.store_no
	ORDER BY COUNT(*) DESC
	LIMIT 7;
   </select>
   
   <select id="getStoreMap" resultMap="storeSelectMap">
   
   SELECT s.store_name, s.store_addr, s.store_type,p.prod_name, p.price, s.latitude,s.longitude,s.store_no
	FROM store s, product p
	WHERE s.store_no = p.store_no AND
			s.store_status=2
	
   </select>
   
   <select id="countStore" resultMap="storeSelectMap" parameterType="String">
   
 	select count(*) count from store where user_id =#{userId}
	
   </select>
   
   
   
   <select id="getStoreMapTotalCount" parameterType="Store"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      store
   </select>
   
   
   <select id="getStoreListTotalCount" parameterType="Store"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      store
   </select>
    
    


   <select id="getStoreTotalCount" parameterType="Store"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      store
   </select>
   
   <select id="getStoreWalletTotalCount" parameterType="Store"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      store
   </select>

   <select id="getCouponTotalCount" parameterType="Coupon"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      coupon
   </select>

   <select id="getProductTotalCount" parameterType="Product"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      product
   </select>

   <select id="getRequestTotalCount" parameterType="Request"
      resultType="int">
      SELECT
      COUNT(*)
      FROM
      request
   </select>
   
       <insert id="insertStoreFile" parameterType="hashMap">
		INSERT INTO MP_FILE(
			FILE_NO,
			store_no,
			ORG_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE
		)VALUES(
			SEQ_MP_FILE_NO.NEXTVAL,
			#{store_no},
			#{ORG_FILE_NAME},
			#{STORED_FILE_NAME},
			#{FILE_SIZE}
		)
    </insert>


</mapper>